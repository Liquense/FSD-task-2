$buttonWidth: 99px;
$wideButtonWidth: 320px;
$buttonBorderWidth: 2px;
$buttonMinHeight: 44px;
$arrowSize: 44px;

.button {
  cursor: pointer;
  width: fit-content;
  height: fit-content;
  text-decoration: none;
  @include boxSizingBorderBox();

  &_type_bordered {
    position: relative;
    @include clearfix();
  }

  &_size_wide {
    width: $wideButtonWidth;
  }

  &_decorated {
    display: flex;
    align-items: center;
    position: relative;
  }

  &_decorated#{&}_size_wide {
    width: $wideButtonWidth;
  }

  &_hovered:not(&_type_text),
  &:not(&_type_text):hover {
    opacity: 0.5;
  }

  &_hovered#{&}_type_text, &_type_text:hover {
    .button__control, .button__decoration {
      color: $darkShade50;
    }
  }

  // region border
  &__border {
    content: '';
    display: block;
    background: linear-gradient(180deg, $purple 0%, $purpleGradientSecond 100%);
    width: 99px;
    height: 44px;
    border-radius: 22px;
    padding: $buttonBorderWidth;

    &_size_wide {
      width: $wideButtonWidth;
    }

    &_decorated#{&}_type_bordered#{&}:not(&_size_wide) {
      width: $buttonWidth + $arrowSize + 2*$buttonBorderWidth;
    }

    &_text-sized {
      height: fit-content;
      width: fit-content;
    }
  }
  // endregion

  // region control
  &__control {
    @include text_label-CTA();
    cursor: pointer;
    height: $buttonMinHeight;
    width: $buttonWidth;
    padding: 0;
    margin: 0;
    border-radius: 22px;

    &:focus {
      outline: none;
    }

    &_type_filled {
      background: linear-gradient(180deg, $purple 0%, $purpleGradientSecond 100%);
      border: none;
      color: $inputBackgroundColor;
    }

    &_type_bordered {
      position: relative;
      border: none;
      background-color: $inputBackgroundColor;
      color: $purple;
      width: 100%;
      height: 100%;
    }

    &_type_text {
      border: none;
      background-color: transparent;
      width: fit-content;
      height: 15px;
      color: $purple;
      cursor: pointer;

      &:focus {
        outline: none;
      }
    }

    &_size_wide#{&}_type_filled {
      width: $wideButtonWidth;
    }

    &_decorated#{&}_type_bordered#{&}:not(&_size_wide) {
      width: $buttonWidth + $arrowSize - 2*$buttonBorderWidth;
    }

    &_text-sized {
      display: block;
      width: auto;
      height: auto;
      line-height: normal;
      padding: 9px 20px 10px 20px;
    }

    &_text-sized#{&}_type_bordered {
      padding: 9px - $buttonBorderWidth 20px - $buttonBorderWidth 10px - $buttonBorderWidth 20px - $buttonBorderWidth;
    }
  }
  // endregion

  // region decoration
  &__decoration {
    display: block;
    font-weight: normal;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: absolute;
    width: $arrowSize;
    height: $arrowSize;
    right: 0;

    &_type_filled {
      color: $inputBackgroundColor;
    }
  }
  // endregion
}
