include ../arrow/arrow
mixin button({text='', isTextSized=false, isLink=false, link='/mock-address/change-me', type='filled', size='', decoration='', isHovered=false} = {})
  - const blockClass = 'button'
  - const controlClass = `${blockClass}__control`

  - const blockAttributes = {class: `js-${blockClass} ${blockClass}`}
  - const controlAttributes = {class: `js-${controlClass} ${controlClass}`}

  if isTextSized
    -blockAttributes.class += ` ${blockClass}_text-sized`
  if isHovered
    -blockAttributes.class += ` ${blockClass}_hovered`
  if decoration
    -blockAttributes.class += ` ${blockClass}_decorated`

  case size
    when 'wide'
      -blockAttributes.class += ` ${blockClass}_size_wide`

  case type
    when 'bordered'
      -blockAttributes.class += ` ${blockClass}_type_bordered`
    when 'text'
      -blockAttributes.class += ` ${blockClass}_type_text`
    when 'filled'
    default
      -blockAttributes.class += ` ${blockClass}_type_filled`

  - const blockTag = isLink ? 'a' : 'button'
  if (isLink)
    - controlAttributes.href = link
  else
    - controlAttributes.type = 'button'

  div&attributes(blockAttributes)
    #{blockTag}&attributes(controlAttributes) #{text}
    if decoration === 'enter-arrow'
      div(class=`${blockClass}__decoration`)
        +arrow({type: 'enter'})
