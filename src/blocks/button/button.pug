include ../arrow/arrow
mixin button({ text='', type='button', link='', style='filled', decoration='', isHovered=false, isStretched=true } = {})
  - const stretchedModifier = isStretched ? ' button_stretched' : ''
  - const hoveredModifier = isHovered ? ' button_hovered' : ''
  - let decoratedModifier = decoration ? ' button_decorated' : ''

  - let styleModifier = ''
  case style
    when 'bordered'
      -styleModifier = ' button_style_bordered'
    when 'text'
      -styleModifier = ' button_style_text'
    when 'filled'
    default
      -styleModifier = ' button_style_filled'

  - const blockTag = link ? 'a' : 'button'
  - const controlAttributes = {}
  if (link)
    -controlAttributes.href = link
  else
    -controlAttributes.type = type

  div(class=`button js-button${stretchedModifier}${hoveredModifier}${decoratedModifier}${styleModifier}`)
    #{blockTag}.button__control.js-button__control&attributes(controlAttributes)
      span.button__text #{text}
      if decoration === 'enter-arrow'
        i.button__decoration
          +arrow({type: 'enter'})
