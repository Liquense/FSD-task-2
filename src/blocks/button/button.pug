include ../arrow/arrow
mixin button({text='', isTextSized=false, isLink=false, link='/mock-address/change-me', type='filled', size='', decoration='', isHovered=false} = {})
  - let textSizedModifier = hoveredModifier = decoratedModifier = ''
  if isTextSized
    -textSizedModifier = 'button_text-sized'
  if isHovered
    -hoveredModifier = 'button_hovered'
  if decoration
    -decoratedModifier = 'button_decorated'

  - let sizeModifier = ''
  case size
    when 'wide'
      -sizeModifier = 'button_size_wide'

  - let typeModifier = ''
  case type
    when 'bordered'
      -typeModifier = 'button_type_bordered'
    when 'text'
      -typeModifier = 'button_type_text'
    when 'filled'
    default
      -typeModifier = 'button_type_filled'

  - const blockTag = isLink ? 'a' : 'button'
  - const controlAttributes = {}
  if (isLink)
    -controlAttributes.href = link
  else
    -controlAttributes.type = 'button'

  div.js-button.button(class=`${textSizedModifier} ${hoveredModifier} ${decoratedModifier} ${sizeModifier} ${typeModifier}`)
    #{blockTag}.js-button__control.button__control&attributes(controlAttributes) #{text}
    if decoration === 'enter-arrow'
      div.button__decoration
        +arrow({type: 'enter'})
