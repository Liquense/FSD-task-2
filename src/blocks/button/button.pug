include ../arrow/arrow
//- types: filled, bordered, text
mixin Button(params={})
  - var defaultParams = {text: "", isTextSized: false, isLink: false, type: "filled", size: "", decoration: "", isHovered: false}
  - params = Object.assign(defaultParams, params)

  - var blockClassName = "button"
  - var borderClassName = "__border"
  - var controlClassName = "__control"
  - var classNames = [blockClassName, borderClassName, controlClassName]

  - var blockAttributes = {class: `${blockClassName} ${blockClassName}_type_${params.type}`}
  - var borderAttributes = {class: `${blockClassName}${borderClassName} ${blockClassName}_type_${params.type}${borderClassName}`}
  - var controlAttributes = {class: `${blockClassName}${controlClassName} ${blockClassName}_type_${params.type}${controlClassName}`}
  - var attributes = {blockAttributes, borderAttributes, controlAttributes}

  - var decorationText = ""
  - var arrowDecorationCN = `${blockClassName}_decoration_enter-arrow`
  - var enterArrowDecoration = "enter-arrow"

  - function createButtonContent() {
    if type === 'bordered'
      div&attributes(borderAttributes)
        button&attributes(controlAttributes) #{text}
    else
      button&attributes(controlAttributes) #{text}
    if decoration === 'enter-arrow'
      div&attributes(decorationAttributes)
        +arrow({type: 'enter'})
  - }

  if isLink
    a(class=blockAttributes.class)
      -createButtonContent()
  else
    div(class=blockAttributes.class)
      -createButtonContent()
