include ../../_spinner/input_type_spinner
include ../../../../button/button

//- input__dropdownListWrapper_rooms - комнаты и кровати
//- input__dropdownListWrapper_customers - гости и младенцы
//- input__dropdownListWrapper_unified - одним словом
mixin dropdownList(elementNames = {}, attr, range)
  div&attributes(attr)
    div.input_type_dropdown__dropdown-list
      each element, index in elementNames
        div(class="text_type_label-CTA input_type_dropdown__dropdown-list-row")
            p.input_type_dropdown__dropdown-text #{element.name}
            +spinner(range, element.name, index, element.value)
    div(class="input_type_dropdown__control-buttons-container")
      div.input__control-button.input__clear-button
        +Button({text: "Очистить", type: "text", isHovered: true})
      div.input__confirm-button.input__control-button
        +Button({text: "Применить", type: "text"})

//- 'input_type_dropdown-unaccepted' - для отображения кнопки "применить" при инициализации
//- 'input_type_dropdown-pure' - для отсутствия контролирующих кнопок постоянно
//- 'input_type_dropdown-opened' - для постоянно открытого дропдауна
mixin addDropdown(ddAttributes, ddData)
  each value, index in Object.values(ddAttributes)
    - value.class += index === 0 ? blockClassName + "_type_dropdown " : blockClassName + "_type_dropdown" + classNames[index] + " "
  - controlAttributes.type = "select"
  //-подтипы дропдауна
  if ddData.dropdownType === "rooms"
    - ddAttributes.dropdownAttributes.class += blockClassName + "_rooms" + dropdownClassName + " "
  else if ddData.dropdownType === "customers"
    - ddAttributes.dropdownAttributes.class += blockClassName + "_customers" + dropdownClassName + " "
  //-модификаторы дропдауна
  if ddData.isUnified
    - ddAttributes.dropdownAttributes.class += blockClassName + "_unified" + dropdownClassName + " "
  if ddData.isOpened
    - ddAttributes.blockAttributes.class += blockClassName + "_type_dropdown-opened "
  if ddData.isPure
    - ddAttributes.blockAttributes.class += blockClassName + "_type_dropdown-pure "
  if ddData.isUnaccepted
    - ddAttributes.blockAttributes.class += blockClassName + "_type_dropdown-unaccepted "

  div&attributes(ddAttributes.blockAttributes)
    if ddData.title
      label&attributes(ddAttributes.titleAttributes) #{ddData.title}
        br
        div&attributes(ddAttributes.controlWrapperAttrs)
          +expand-arrow()
          input&attributes(ddAttributes.controlAttributes)
    else
      label&attributes(ddAttributes.titleAttributes)
        div&attributes(ddAttributes.controlWrapperAttrs)
          input&attributes(ddAttributes.controlAttributes)
          +expand-arrow()
    +dropdownList(ddData.data, ddAttributes.dropdownAttributes, ddData.range)
