include ../arrow/arrow

//-title -заголовок
//-types -типы инпута: ( text, mask)
//-	размеры: (medium, premedium, narrow),
//-placeholder -плейсхолдер в инпуте
//-data -значения (даты для календаря/текст для текстового инпута/набор значений для дропдауна)
mixin input({title = '', type, width, placeholder, withSubscription = false, isExpandable = false, isFocused = false, inDatepicker = false, data})
  -var blockClassName = 'input'
  -var titleClassName = '__title'
  -var controlWrapperCN = '__control-wrapper'
  -var controlClassName = '__control'
  -var classNames = [blockClassName, titleClassName, controlClassName, controlWrapperCN]

  -var blockAttributes = {class: `${blockClassName} `}
  -var titleAttributes = {class: `${blockClassName}${titleClassName} `}
  -var controlWrapperAttrs = {class: `${blockClassName}${controlWrapperCN} `}
  -var controlAttributes = {class: `${inDatepicker || isExpandable ? `js-${blockClassName}${controlClassName} ` : ''}${blockClassName}${controlClassName} `,
  -  placeholder: placeholder, value: data}
  -var allAttrs = {blockAttributes, titleAttributes, controlAttributes, controlWrapperAttrs}

  each value, index in Object.values(allAttrs)
    //-ширина
    if width === 'narrow'
      -value.class += `${index ? blockClassName : ''}${classNames[index]}_width_narrow `
    else if width === 'premedium'
      -value.class += `${index ? blockClassName : ''}${classNames[index]}_width_premedium `
    else if width === 'medium'
      -value.class += `${index ? blockClassName : ''}${classNames[index]}_width_medium `
    //-если подписка, то декорация-стрелочка вправо
    if withSubscription
      -value.class += `${index ? blockClassName : ''}${classNames[index]}_with-subscription `
    if isExpandable
      -value.class += `${index ? blockClassName : ''}${classNames[index]}_expandable `
    //-фокус
    if isFocused
      -value.class += `${index ? blockClassName : ''}${classNames[index]}_focused `
    //-Просто текст
    if type === 'text'
      -value.class += `${index ? blockClassName : ''}${classNames[index]}_type_text `
      -allAttrs.controlAttributes.type = 'text'
    //-Текст с маской
    else if type === 'mask'
      -const stringToAdd = `${index ? blockClassName : ''}${classNames[index]}_type_masked `
      -value.class += `js-${stringToAdd} ${stringToAdd} `

  div&attributes(allAttrs.blockAttributes)
    label&attributes(allAttrs.titleAttributes) #{title}
      if title
        br
      div&attributes(allAttrs.controlWrapperAttrs)
        input&attributes(allAttrs.controlAttributes)
        if withSubscription
          div.input_with-subscription__arrow
            +arrow({type: 'enter', isColored: true, isBold: true})
        else if isExpandable
          div.input_expandable__arrow
            +arrow({type: 'expand'})
