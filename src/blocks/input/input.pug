include ../arrow/arrow
include ../title/title

mixin input({title='', type='text', isStretched=true, placeholder, withSubscription=false, isExpandable=false, isActive=false, text, inDropdown=false} = {})
  -const stretchedModifier = isStretched ? ' input_stretched' : ''
  -const subscriptionModifier = withSubscription ? ' input_with-subscription' : ''
  -const expandableModifier = isExpandable ? ' input_expandable' : ''
  -const activeModifier = isActive ? ' input_active' : ''
  -const inDropdownModifier = inDropdown ? ' input_with-dropdown-list' : ''

  -let typeModifier = ''
  case type
    when 'mask'
      -typeModifier = ' input_type_masked'
  -let typeAttribute = type
  case type
    when 'mask'
      -typeAttribute = 'text'

  div(class=`input js-input${stretchedModifier}${subscriptionModifier}${expandableModifier}${activeModifier}${inDropdownModifier}${typeModifier}`)
    if title
      div.input__title.js-input__title
        +title({type: 'label', text: title})
    div.input__control-wrapper.js-input__control-wrapper
      input.input__control.js-input__control(value=text placeholder=placeholder readonly=isExpandable type=typeAttribute)
      button.input__arrow(type='button')
        if withSubscription
          +arrow({type: 'enter', isColored: true, isBold: true})
        else if isExpandable
          +arrow({type: 'expand'})
