$inputHeight: 44px;
$borderWidth: 1px;
$expandHeight: 18px;
$arrowSize: 24px;
$inputWidth: 320px;
$narrowInputWidth: 150px;
$preMedInputWidth: 260px;
$mediumInputWidth: 266px;
$inputBorderRadius: 4px;
$inputTopMargin: 3px;
$fontSize: 14px;
$lineHeight: 15px;
$paddingTop: 12px - $borderWidth;
$paddingRight: 15px - $borderWidth;
$paddingBottom: 14px - $borderWidth;
$paddingLeft: 15px - $borderWidth;

$lineHeight: ($inputHeight - 2*$borderWidth - $paddingTop - $paddingBottom);

.input {
  height: fit-content;
  max-width: $inputWidth;
  width: 100%;
  @include boxSizingBorderBox();

  // region width
  &_width_narrow {
    max-width: $narrowInputWidth;
  }

  &_width_premedium {
    max-width: $preMedInputWidth;
  }

  &_width_medium {
    max-width: $mediumInputWidth;
  }
  // endregion

  &__title {
    @include text_label-CTA();
    display: block;
    position: relative;
    line-height: $lineHeight;

    &_expandable {
      cursor: pointer;
    }
  }

  &__control-wrapper {
    display: inline-block;
    margin-top: $inputTopMargin;
    position: relative;
    width: 100%;
  }

  &__control {
    border-radius: $inputBorderRadius;
    width: 100%;
    height: $inputHeight;
    border: $borderWidth solid $darkShade25;
    background: $inputBackgroundColor;
    padding: $paddingTop $paddingRight $paddingBottom $paddingLeft;
    @include text(Montserrat, normal, $fontSize, $lineHeight, $darkShade25, -0.18px); //в фигме написано, что межбуквенный интервал нулевой, но при сравнении в PixelPerfect похоже получилось -0.18px
    margin: 0 0 0 0;
    text-overflow: ellipsis;

    &::placeholder {
      @include text(inherit, inherit, inherit, inherit, $darkShade75, inherit);
    }

    &_focused {
      color: $darkShade75;
      border-color: $darkShade50;
      outline: 0;
    }

    &_with-subscription {
      padding-right: $inputHeight;
    }

    &_expandable {
      cursor: pointer;
    }

    // region type
    &_type_masked:valid:hover,
    &_type_masked:focus {
      color: $darkShade75;
    }

    &_type_text:focus,
    &_type_text:hover {
      color: $darkShade75;
    }
    // endregion

    &:focus,
    &:hover {
      color: $darkShade75;
      border-color: $darkShade50;
      outline: 0;

      &::placeholder {
        @include text(inherit, inherit, inherit, inherit, $darkShade75, inherit);
      }
    }
  }

  &__arrow {
    &_with-subscription,
    &_expandable {
      position: absolute;
      top: 0;
      right: 0;
      height: $inputHeight;
      width: $inputHeight; //у стрелки фиксированный размер
      padding: ($inputHeight - $arrowSize)/2;
    }
  }
}
