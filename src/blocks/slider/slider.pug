mixin slider({minValue = 0, maxValue = 10, step = 1, title = "", isRange = false, initialValues = [5]} = {})
  -const sliderClass = 'slider'
  -const textClass = `${sliderClass}__text`
  -const titleClass = `${sliderClass}__title`
  -const valueClass = `${sliderClass}__value`
  -const containerClass = `${sliderClass}__container`
  -const controlClass = `${sliderClass}__control`
  -const allClasses = [sliderClass, textClass, titleClass, valueClass, containerClass, controlClass]

  -const sliderAttrs = {class: `js-${sliderClass} ${sliderClass}`}
  -const textAttrs = {class: textClass}
  -const titleAttrs = {class: titleClass}
  -const valueAttrs = {class: `js-${valueClass} ${valueClass}`}
  -const containerAttrs = {class: containerClass}
  -const controlAttrs = {class: `js-${controlClass} ${controlClass}`, ['data-min']: minValue, ['data-max']: maxValue, ['data-step']: step, ['data-first-value']: initialValues[0]}
  -const allAttrs = [sliderAttrs, textAttrs, titleAttrs, valueAttrs, containerAttrs, controlAttrs]

  if isRange
    each value, index in allAttrs
      -value.class += ` ${allClasses[index]}_range `
    -controlAttrs['data-second-value'] = initialValues[1]

  div&attributes(sliderAttrs)
    div&attributes(textAttrs)
      p&attributes(titleAttrs) #{title}
      p&attributes(valueAttrs) â‚½
    div&attributes(containerAttrs)
      div&attributes(controlAttrs)
