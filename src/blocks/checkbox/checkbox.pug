mixin checkbox({isChecked=false, text='', type='', description} = {})
  -const checkboxClass = 'checkbox'
  -const textClass = `${checkboxClass}__text`
  -const inputClass = `${checkboxClass}__button`
  -const descriptionClass = `${checkboxClass}__description`
  -const classNames = [checkboxClass, inputClass, descriptionClass, textClass]

  -const checkboxAttributes = {class: `${checkboxClass} `}
  -const inputAttributes = {class: `${inputClass} `, type: 'checkbox', checked: isChecked}
  -const descriptionAttributes = {class: `${descriptionClass} `}
  -const textAttributes = {class: `${textClass} `}
  -const allAttributes = [checkboxAttributes, inputAttributes, descriptionAttributes, textAttributes]

  each value, index in Object.values(allAttributes)
    if description
      - value.class += `${classNames[index]}_rich `

    case type
      when 'toggle'
        - value.class += `${classNames[index]}_type_toggle `
        if isChecked
          - checkboxAttributes.class += `${checkboxClass}_toggled `
      default
        - value.class += `${classNames[index]}_type_default `

  label&attributes(checkboxAttributes)
    input&attributes(inputAttributes)
    span&attributes(textAttributes) #{text}
    if description
      p&attributes(descriptionAttributes) #{description}
