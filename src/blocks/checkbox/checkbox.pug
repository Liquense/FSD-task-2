mixin checkbox({isChecked=false, text='', type='', description} = {})
  -const checkboxClass = 'checkbox'
  -const labelClass = `${checkboxClass}__label`
  -const textClass = `${checkboxClass}__text`
  -const inputClass = `${checkboxClass}__hidden-button`
  -const descriptionClass = `${checkboxClass}__description`
  -const classNames = [checkboxClass, labelClass, inputClass, descriptionClass, textClass]

  -const checkboxAttributes = {class: `js-${checkboxClass} ${checkboxClass} `}
  -const labelAttributes = {class: `${labelClass} `}
  -const inputAttributes = {class: `js-${inputClass} ${inputClass} `, type: 'checkbox', 'data-is-checked': `${isChecked}`}
  -const descriptionAttributes = {class: `${descriptionClass} `}
  -const textAttributes = {class: `${textClass} `}
  -const allAttributes = [checkboxAttributes, labelAttributes, inputAttributes, descriptionAttributes, textAttributes]

  each value, index in Object.values(allAttributes)
    if description
      - value.class += `${classNames[index]}_rich `

    case type
      when 'toggle'
        - value.class += `${classNames[index]}_type_toggle `
        if isChecked
          - labelAttributes.class += `${labelClass}_toggled `
      default
        - value.class += `${classNames[index]}_type_default `

  div&attributes(checkboxAttributes)
    label&attributes(labelAttributes)
      p&attributes(textAttributes) #{text}
      input&attributes(inputAttributes)
      if description
        p&attributes(descriptionAttributes) #{description}
