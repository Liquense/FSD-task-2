include ../spinner/spinner
include ../input/input

//- rooms - комнаты и кровати
//- customers - гости и младенцы
//- unified - одним словом
//- unaccepted - для отображения кнопки "применить" при инициализации
//- pure - для отсутствия контролирующих кнопок постоянно
//- opened - для постоянно открытого дропдауна
mixin dropdown({title, width, dropdownType, placeholder, range = [0, 5], isUnified = false, isPure = false, isOpened = false, isUnaccepted = false, isFocused = false, data = undefined} = {})
  -const blockClass = 'dropdown'
  -const listClass = 'dropdown__list'
  -const listWrapperClass = 'dropdown__list-wrapper'
  -const inputClass = 'dropdown__input'
  -const buttonsContainerClass = 'dropdown__buttons-container'
  -const clearButtonClass = 'dropdown__clear-button'
  -const confirmButtonClass = 'dropdown__confirm-button'

  -let blockClasses = `js-${blockClass} ${blockClass} `
  -let listClasses = `js-${listClass} ${listClass} `
  -let listWrapperClasses = `js-${listWrapperClass} ${listWrapperClass} `

  //-подтипы дропдауна
  if dropdownType === 'rooms'
    -listClasses += 'dropdown__list_type_rooms '
  else if dropdownType === 'customers'
    -listClasses += 'dropdown__list_type_customers '
  //-модификаторы дропдауна
  if isUnified
    -listClasses += 'dropdown__list_unified '
  if isOpened
    -blockClasses += 'dropdown_opened '
  if isPure
    -blockClasses += 'dropdown_pure '
  if isUnaccepted
    -blockClasses += 'dropdown_unaccepted '
  //-ширина
  else if width === 'medium'
    -listWrapperClasses += 'dropdown__list-wrapper_width_medium '

  div(class=blockClasses)
    div(class=`js-${inputClass} ${inputClass}`)
      +input({title: title, width: width, placeholder: placeholder, isExpandable: true, isFocused: isOpened})
    div(class=listWrapperClasses)
      div(class=listClasses)
        each element, index in data
          div.dropdown__list-row
            p.dropdown__list-row-text #{element.name}
            div.dropdown__spinner
              +spinner({range: range, name: element.name, index, initValue: element.value})
      div(class=`js-${buttonsContainerClass} ${buttonsContainerClass}`)
        div(class=`js-${clearButtonClass} ${clearButtonClass}`)
          +button({text: 'Очистить', type: 'text', isHovered: true})
        div(class=`js-${confirmButtonClass} ${confirmButtonClass}`)
          +button({text: 'Применить', type: 'text'})
