include ../checkbox/checkbox
include ../radio-button/radio-button
include ../arrow/arrow

mixin list({type='', isExpandable=false, isNarrow=false, isOpened=false, title='', elements=[]} = {})
  -const listClassName = 'list'
  -const titleClassName = `${listClassName}__title`
  -const containerClassName = `${listClassName}__container`
  -const classNames = [listClassName, titleClassName, containerClassName]

  -const listAttrs = {class: `js-${listClassName} ${listClassName} `}
  -const titleAttrs = {class: `js-${titleClassName} ${titleClassName} `}
  -const containerAttrs = {class: `js-${containerClassName} ${containerClassName} `}
  -const attrs = [listAttrs, titleAttrs, containerAttrs]

  each value, index in attrs
    if type === 'checkbox'
      -value.class += `${classNames[index]}_type_checkbox `
    else if type === 'radio'
      -value.class += `${classNames[index]}_type_radio `
    else if type === 'toggle'
      -value.class += `${classNames[index]}_type_toggle `

    if isExpandable
      -value.class += `${classNames[index]}_expandable `
      if isNarrow
        -value.class += `${classNames[index]}_expandable-narrow `
      if isOpened
        -value.class += `${classNames[index]}_expandable-opened `

  fieldset&attributes(listAttrs)
    if title
      legend&attributes(titleAttrs) #{title}
      if isExpandable
        div.list__expand-arrow
          +arrow({type: 'expand'})
    div&attributes(containerAttrs)
      each value, index in elements
        -const itemClasses = `${listClassName}__item ${listClassName}__item_type_${type} `
        -  + `${value.description ? `${listClassName}__item_rich` : ''}`
        div(class=itemClasses)
          if type === 'radio'
            +radioButton(value)
          else
            +checkbox(Object.assign(value, {type}))
