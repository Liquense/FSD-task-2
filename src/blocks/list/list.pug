include ../checkbox/checkbox
include ../arrow/arrow

mixin list({type = "", isExpandable = false, isNarrow = false, isOpened = false, title = "", elements = []} = {})
  -const listClassName = 'list'
  -const titleClassName = `${listClassName}__title`
  -const containerClassName = `${listClassName}__container`
  -const classNames = [listClassName, titleClassName, containerClassName]

  -const listAttrs = {class: `js-${listClassName} ${listClassName} `}
  -const titleAttrs = {class: `js-${titleClassName} ${titleClassName} `}
  -const containerAttrs = {class: `js-${containerClassName} ${containerClassName} `}
  -const attrs = [listAttrs, titleAttrs, containerAttrs]

  -let inputType = ''
  -let isRich = false;

  each value, index in attrs
    //- типы чекбоксов
    if type.includes("checkbox")
      -value.class += `${classNames[index]}_type_checkbox `
      -inputType = "checkbox"
    else if type.includes("radio")
      -value.class += `${classNames[index]}_type_radio `
      -inputType = "radio"
    else if type.includes("toggle")
      -value.class += `${classNames[index]}_type_toggle `
      -inputType = "toggle"
    else if type.includes("rich")
      -value.class += `${classNames[index]}_type_rich `
      -inputType = "rich"
      -isRich = true
    //- модификаторы списка
    if isExpandable
      -value.class += `${classNames[index]}_expandable `
      if isNarrow
        -value.class += `${classNames[index]}_expandable-narrow `
      if isOpened
        -value.class += `${classNames[index]}_expandable-opened `

  fieldset&attributes(listAttrs)
    if title
      legend&attributes(titleAttrs) #{title}
      if isExpandable
        div.list__expand-arrow
          +arrow({type: 'expand'})
    div&attributes(containerAttrs)
      each value, index in elements
        div(class=`${listClassName}__input ${listClassName}__input_type_${inputType}`)
          +checkbox({
            text: value.text, type: `${inputType}`, isRich: isRich,
            additional: value, isChecked: value.isChecked
          })
