mixin Input(title, types, placeholder, addClasses, mask, additional=[], range=[0, 5])
	- var blockClassName = "input"
	- var titleClassName = "input__title"
	- var controlClassName = "input__control"
	- var dropdownClassName = "input__dropdownListWrapper"
	- var controlWrapperCN = "input__controlWrapper"
	- var classNames = [blockClassName, titleClassName, controlClassName, dropdownClassName, controlWrapperCN]

	- var blockAttributes = {class: blockClassName + " " + addClasses + " "}
	- var titleAttributes = {class: titleClassName + " " + "text_type_label-CTA input__title "}
	- var controlAttributes = {class: controlClassName + " ", placeholder: placeholder}
	- var dropdownAttributes = {class: " "}
	- var controlWrapperAttrs = {class: `${controlWrapperCN} `}
	- var attributes = [blockAttributes, titleAttributes, controlAttributes, dropdownAttributes, controlWrapperAttrs]

	//-календарь
	if types.includes("datepicker")
		each value, index in attributes
			- value.class += classNames[index] + "_type_datepicker "
		- controlAttributes.type = "select"
		- controlAttributes["data-firstDate"] = additional[0]
		- controlAttributes["data-secondDate"] = additional[1]
	//-дропдаун
	else if types.includes("dropdown")
		//-подтипы дропдауна
		if types.includes("unified")
			- dropdownAttributes.class += dropdownClassName + "_unified "
		//
		if types.includes("rooms")
			- dropdownAttributes.class += dropdownClassName + "_rooms "
		else if types.includes("customers")
			- dropdownAttributes.class += dropdownClassName + "_customers "
		each value, index in attributes
			- value.class += classNames[index] + "_type_dropdown "
		- controlAttributes.type = "select"
	//-Просто текст
	if types.includes("text")
		each value, index in attributes
			- value.class += classNames[index] + "_type_text "
		- controlAttributes.type = "text"
	//-Текст с маской
	if types.includes("mask")
		each value, index in attributes
			- value.class += classNames[index] + "_masked "
	//-если раскрывающийся - добавляем декорацию-стрелочку вниз
	if types.includes("dropdown") || types.includes("datepicker")
		each value, index in attributes
			- value.class += classNames[index] + "_decoration_expandArrow "
	//-если подписка, то декорация-стрелочка вправо
	else if types.includes("subscription")
		each value, index in attributes
			- value.class += classNames[index] + "_decoration_enterArrow "
	//-ширина
	if types.includes("narrow")
		each value, index in attributes
			- value.class += classNames[index] + "_width_narrow "
	else if types.includes("premedium")
		each value, index in attributes
			- value.class += classNames[index] + "_width_preMedium "
	else if types.includes("medium")
		each value, index in attributes
			- value.class += classNames[index] + "_width_medium "

	include ./_type/_dropdown/input__list_type_dropdown
	include ./_decoration/_expandArrow/input_decoration_expandArrow
	include ./_decoration/_enterArrow/input_decoration_enterArrow
	div&attributes(blockAttributes)
		if title
			label&attributes(titleAttributes) #{title}
				br
				div&attributes(controlWrapperAttrs)
					if types.includes("dropdown") || types.includes("datepicker")
						+expandArrow()
					else if types.includes("subscription")
						+enterArrow()

					input&attributes(controlAttributes)
		else
			if types.includes("dropdown") || types.includes("datepicker")
			label&attributes(titleAttributes)
				div&attributes(controlWrapperAttrs)
					input&attributes(controlAttributes)
					if types.includes("dropdown") || types.includes("datepicker")
						+expandArrow()
					else if types.includes("subscription")
						+enterArrow()
		if types.includes("dropdown")
			+dropdownList(additional, dropdownAttributes, range)
