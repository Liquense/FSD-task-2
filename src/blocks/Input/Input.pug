mixin Input(title, types, placeholder, addClasses, mask, additional=[])
	- var blockClassName = "input"
	- var titleClassName = "input__title"
	- var controlClassName = "input__control"
	- var classNames = [blockClassName, titleClassName, controlClassName]

	- var blockAttributes = {class: blockClassName + " " + addClasses + " "}
	- var titleAttributes = {class: titleClassName + " " + "text_type_label-CTA input__title "}
	- var controlAttributes = {class: controlClassName + " ", placeholder: placeholder}
	- var attributes = [blockAttributes, titleAttributes, controlAttributes]

	if types.includes("datepicker")
		each value, index in attributes
			- value.class += classNames[index] + "_type_datepicker "
		- controlAttributes.type = "select"
		//- controlAttributes.readonly = true;
	else if types.includes("dropdown")
		each value, index in attributes
			- value.class += classNames[index] + "_type_dropdown "
		- controlAttributes.type = "select"

	if types.includes("text")
		each value, index in attributes
			- value.class += classNames[index] + "_type_text "
		- controlAttributes.type = "text"

	if types.includes("mask")
		each value, index in attributes
			- value.class += classNames[index] + "_masked "

	if types.includes("dropdown") || types.includes("datepicker")
		each value, index in attributes
			- value.class += classNames[index] + "_decoration_expandArrow "
	else if types.includes("subscription")
		each value, index in attributes
			- value.class += classNames[index] + "_decoration_enterArrow "

	if types.includes("narrow")
		each value, index in attributes
			- value.class += classNames[index] + "_width_narrow "
	else if types.includes("medium")
		each value, index in attributes
			- value.class += classNames[index] + "_width_medium "

	include ./_type/_dropdown/input__menu_type_dropdown
	div&attributes(blockAttributes)
		label&attributes(titleAttributes) #{title}
			br
			input&attributes(controlAttributes)
		if types.includes("dropdown")
			+dropdownList(additional)
